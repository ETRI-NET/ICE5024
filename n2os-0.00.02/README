/** 
  @mainpage 고 가용성 네트워크 운영체제(NOS : Network Operating System)
  @section intro 고가용성 네트워크 운영체제 개발 필요성
  국내외 네트워크 장비 시장의 침체에 따라 네트워크 장비를 운용하기 위한 네트워크 운영체제에 대한 투자가 이루어지지 않아, 국내 네트워킹 장비의 기술 및 가격경쟁력이 많이 약화되어 있는 상황에서, 외국 메이저 벤더는 수년간의 지속적인 기술 개발을 통하여 자체 네트워크 운영체제를 확보하고 있으나, 후발 국내 벤더들은 고가의 상용 네트워크 운영체제를 이용하거나 오픈 소스 기반으로 네트워킹 장비를 개발하는 실정에 있다. 
  네트워크 운영체제 기술은 네트워크 장비 자체의 경쟁력뿐만 아니라 차세대 통신장비 시장에서의 기술 및 가격 경쟁력을 좌우하는 핵심기술이다. 따라서 네트워크 운영체제 기술력의 확보는 장비의 성능 최적화, 기능 고도화 뿐만 아니라 새로운 개념에 기반한 통신장비 기술 확보에 직접적인 영향을 미친다. 이에 따라, 국내 네트워크 장비 산업의 경쟁력 강화를 위하여, 스위치, 라우터, 전송장비 등에 공통으로 사용하는 네트워크 운영체제 기술 개발을 진행하고 있다.

  @section 특징
 “하드웨어 독립적인 고가용성 지원 네트워크 운영체제”는 세계시장을 선점하고 있는 Global 네트워크 장비 업체에 대항하여 국내 네트워크 장비 업체들이 경쟁력을 확보할 수 있도록 국내 업체들에게서 요구하는 기능을 수용하고, 기존 Open Source 기반의 NOS 제품 및 고가의 상용 NOS 제품에 대한 경쟁력을 확보하기 위하여 가용성, 확장성, 성능, 유지관리, 재사용성 등의 특성을 고려하여 다음과 같은 6가지의 핵심 기능(Main Features)을 제공한다.

  ■ 고가용성 (High Availability)
  N2OS 시스템은 Graceful Restart 기능 Graceful Restart : 인접한 라우터와 협업에 의해서 네트워크 장비에 대한 이중화를 지원하는 방법으로 프로토콜의 기능 확장이 필요함
을 이용하여 Warm Standby 형태의 이중화를 제공하는 기존 제품에 대하여 경쟁력을 확보하기 위해 N2OS 고유의 Check-point 기능을 활용한 실시간 프로토콜 데이터 이중화 기반의 Hot Standby 이중화를 제공한다. 또한, Fast Fault Detection을 제공하는 장애 관리 메커니즘을 통하여 Active System의 장애발생시 실시간으로 Standby System으로 절체가 이루어져 5 nines(99.999%)의 서비스 연속성을 보장한다.

  ■ 높은 수준의 모듈화 및 이식성 (High Modularity & Portability)
  N2OS 시스템의 S/W 구조는 Protocol Layer Extension, Management Layer Extension, Network Service Extension, H/W Layer Extension을 제공하기 위한 구조로 설계되었으며, 각각의 Layer 들의 N2OS 고유의 IPC 메커니즘을 통하여 Loosely Coupled 연결되어 상호 독립적인 프로세스로 동작한다. 따라서 하나의 큰 기능블록을 통하여 모든 Network Service를 수행하는 기존의 상용 NOS 시스템과는 달리 L2 Switch, L3 Router, MPLS, Carrier Ethernet 등 장비에 따라서 필요한 기능들을 선택적으로 이식할 수 있는 높은 수준의 모듈화를 제공한다. 뿐만 아니라, 특정 장비 고유의 프로토콜을 개발하더라도 N2OS 의 확장성 있는 S/W 구조를 통하여 손쉽게 이식이 가능하다.

  ■ 간편한 응용프로토콜 개발 프레임워크 (Easy Protocol Development Framework)
  N2OS 시스템 S/W는 네트워크 응용 프로토콜 개발에 필요한 CLI, IPC, Event, Log, Task Management, Memory Management, Data Structure 등 다양한 시스템 라이브러리들을 제공한다. 그리고 새롭게 개발된 응용프로토콜이 N2OS 시스템에 쉽게 이식될 수 있도록 표준화된 절차 및 예제를 제공한다. 기존의 상용 NOS S/W처럼 시스템 이식을 위한 다양한 절차를 수행할 필요 없이 응용 프로토콜 개발자는 프로토콜 자체의 기능 구현에만 집중할 수 있어 손쉽게 응용 프로토콜의 개발이 가능하다.

  ■ 서비스 중단 없는 소프트웨어 업그레이드 (Non-Stop SW Upgrading)
  N2OS 시스템은 고유의 이중화 모델을 활용한 서비스의 중단 없는 소프트웨어 업그레이드 기능을 제공한다. 소프트웨어 업그레이드를 위한 버전관리, 소프트웨어 Repository, Upgrading CLI 등을 통하여 운용자는 새로운 소프트웨어로 업그레이드 또는 이전 버전으로 다운그레이드 등 소프트웨어에 대한 관리를 서비스의 중단 없이 가능하다.  

  ■ 개방형 시스템 관리 프레임워크 (Open Management Framework)
  N2OS 시스템은 기존의 CLI 기반의 관리구조를 확장하여 SNMP, XML 등 다양한 프로토콜 기반의 네트워크 장비 관리 기능을 제공한다. 또한, HTTP 기반의 장비 관리 기능을 제공하여 인터넷을 통한 쉬운 운용자 인터페이스 기능을 제공한다. 이러한 다양한 운용자 인터페이스는 확장성 있는 Command Manager 모듈을 통하여 시스템 내부의 명령어로 변환되어 N2OS 소프트웨어 기능블록으로 전달되기 때문에 필요에 따라 다양한 방법의 운용자 인터페이스의 추가가 가능하다. 

  ■ H/W 독립적인 추상화 프레임워크 (Hardware Independent HAL Framework)
  N2OS 시스템은 Pizza Box 형태의 소형 H/W부터 Multi-Rack 형태의 대형 H/W까지 다양한 형태의 H/W 구성을 지원하기 위한 N2OS 고유의 표준화된 H/W 추상화 라이브러리를 제공한다. 또한, N2OS 추상화 라이브러리는 COTS 형태의 다양한 Switch chip 및 L2-4를 지원하는 Multi-Layer chip family를 지원하도록 구성되어 있어 H/W에 이식할 경우 소프트웨어의 변경 없이 N2OS 추상화 라이브러리의 Adaptation 만으로 손쉽게 이식이 가능하다.

  @section 시스템 아키텍처
  N2OS는 시스템 운용관리를 위한 Management Framework, L2/L3/Multicast 및 MPLS 프로토콜들로 구성된 Protocol Domain, 다양한 네트워킹 서비스 제공을 위한 Network Service Framework, 시스템의 신뢰성을 보장하기 위한 High Availability Framework 그리고 상위 컴포넌트들이 공통으로 사용하는 라이브러리를 제공하는 System Library로 구성되며, 이들은 Linux 상에서 동작한다.
  @image html N2OS_Platform.jpg

	N2OS SW 플랫폼 구조도

  ■ High Availability Linux OS 
  N2OS가 탑재되는 리눅스 운영체제에는 네트워크 장비들을 위한 고 가용성 기능들이 내장되어 있다. “One Active + One Standby“ 구조의 Hot-Standby 이중화 구조를 지원하며 네트워킹 정보들에(FIB(Forwarding Information Base), FDB(Forwarding DataBase), Interface, Address 등) 대한 Bulk 동기화 및 실시간 동기화 기능을 제공한다. 또한 BGP(Boarder Gateway Protocol), LDP(Label Distribution Protocol) 등과 같이 TCP를 사용하는 프로토콜들의 이중화를 위해서 Fault-Tolerant TCP 기능을 제공한다. 이러한 이중화를 위한 지원 기능 이외에도 멀티코어 기반 태스크 처리 효율 향상 기능 및 전력 고효율 기능을 제공한다. 

  ■ System Library 
  시스템 라이브러리 기술은 N2OS 개발자들을 위한 개발 프레임워크를 제공하기 위해서 시스템 차원에서 지원하는 라이브러리 기술로써 프로세스 관리를 위한 Process Manager, 프로세스들의 동작 과정을 기록하기 위한 로그(Log) 기능, 이벤트 발생 및 처리를 위한 이벤트(Event) 기능, 프로세스들 간의 정보 교환을 위한 IPC(Inter-Process Communication) 기능, 메모리 설정/해제/누수 관리를 위한 메모리 제어 기능, 다양한 하드웨어 플랫폼이나 OS를 지원하기 위한 HAL 및 PAL 기능 등을 포함한다. 이 외에도 Data Structure, Timer, 문자열 처리 기능 등을 제공함으로써 소프트웨어 개발자들이 효율적으로 소프트웨어를 개발하고 관리할 수 있도록 한다. 

  ■ High Availability Framework 
  N2OS의 네트워크 서비스 프레임워크, 프로토콜 도메인 및 매니지먼트 프레임워크 계층에 탑재되는 소프트웨어들에 대한 고 가용성을 제어하기 위한 프레임워크이다. 고 가용성 프레임워크는 크게 Availability 매니저, Checkpoint 매니저 그리고 Upgrade 매니저로 구성되어 있다. Availability 매니저는 각 소프트웨어들에 대한 건강 상태(Health Monitoring) 및 장애 감시(Fault Detection)를 통하여 시스템 전체의 이중화를 위한 Active/Standby 임무 할당을 결정하는 역할을 수행하고, Checkpoint 매니저는  Active와 Standby 노드 간 각 소프트웨어들에 대한 상태 정보를 동기화시켜주는 역할을 수행하며, Upgrade 매니저는 서비스 연속성을 제공하면서 동적으로 소프트웨어를 업그레이드 하는 역할을 담당한다.

  ■ 네트워크 서비스 Framework 
  N2OS는 Layer 2 기능으로 xSTP(Any Spanning Tree Protocol), LACP(Link Aggregation Control Protocol), GVRP(GARP VLAN Registration Protocol) 등의 프로토콜이, Layer 3 기능으로 RIP(Routing Information Protocol), OSPF(Open Shortest Path First), ISIS(Intermediate System to Intermediate System) , 그리고 BGP 프로토콜 및 Multicast 기능으로 PIM(Protocol Independent Multicaste), IGMP(Internet Group Management Protocol) 등의 프로토콜, 그리고 MPLS(Multi-Protocol Label Switching) 기능으로 LDP, RSVP-TE(Resource Reservation Protocol - Traffic Engineering) 프로토콜이 동작하여 각각의 기능을 제공한다. 또한 다수의 프로토콜이 동작함에 따라 발생하는 정보관리의 중복성을 최소화하고, 공통 기능을 모듈화한 네트워크 서비스 Framework 구조를 갖는다. PIF Manager는 시스템의 Port 및 Interface 정보에 대한 생성 및 관리를 주관하고, Policy Manager는 L3 서비스 제어를 위한 시스템의 각종 정책에 대한 생성 및 관리를 주관하고, MRIB Manager는 PIM-SM 등의 Multicast Routing 프로토콜이 생성하는 Multicast Route 정보에 대한 제어 및 관리를 주관하고, RIB Manager는 RIP/OSPF/ISIS/BGP 등의 L3 Routing 프로토콜이 생성하는 Route 정보에 대한 제어 및 관리를 주관하며, LIB Manager는 (CR-)LDP/RSVP-TE 등의 MPLS 프로토콜이 생성하는 Label 정보에 대한 제어 및 관리를 주관하는 역할을 각각 수행한다.

   ■ Management Framework 
   N2OS의 Management Framework 기능은 각 블록의 장애 및 상태를 관리하는 Process Manager 기능, 시스템 운용/관리/유지보수 기능을 담당하는 OAM 기능 및 시스템 내·외부 명령어를 처리하는 Command Manager 기능으로 구성된다. Process Manager는 시스템을 구성하는 각각의 블록을 순차적으로 구동하고, 운영 중에 블록의 상태를 모니터링하여 비정상 종료 시 재시동 또는 종료시키는 기능을 담당한다. OAM은 시스템의 동작 상태에 대해 운영자가 숙지해야 하는 정보를 알려주는 기능을 수행한다. Command Manager 기능은 운용자 및 외부 운영관리 시스템으로부터 명령어를 수신하고 내부 각 블록에 명령어를 전달하는 기능을 담당한다.


  @section 기능들
  @image html N2OS_SW_Functions.jpg
  ■ Availability, Checkpoint and ISSU Manager 
  Availability 매니저는 네트워크 운영체제에 서비스 연속성을 위한 고 가용성 기능을 제공하는데 그 목적이 있다. 고 가용성을 제공하기 위해 Availability 매니저는 Active/Standby 노드 이중화 구조에서 각 노드의 등록된 자원들에 대한 장애 감시를 통해서 그 자원들에 대한 Life Cycle을 관리하며, 최종적으로 각 자원들에 Active 또는 Standby 임무를 할당하는 역할을 수행한다. Checkpoint 매니저는 다른 노드 상에서 동작하는 동일한 컴포넌트들이 자신들의 상태정보를 동기화하기 위한 서비스를 제공하며, 체크포인트 기반의 동기식/비동기식 데이터 복제 기능을 지원한다. ISSU 매니저는 Availability 매니저와 Checkpoint 매니저가 제공하는 고 가용성 프레임워크를 활용해서 서비스 연속성을 보장하면서 동적으로 소프트웨어에 대한 업그레이드 서비스를 제공한다. 업그레이드는 캠페인을 통한 백업 생성, 검증 및 Commit 단계로 진행되며, 실패 시 Fallback 또는 Rollback 이 가능한 구조를 채택하고 있다. 이와 같은 고 가용성을 위한 매니저들은 SA Forum의 AIS 표준을 따르고 있기 때문에 타 AIS 지원 미들웨어와의 호환이 가능하다.

  ■ PIF Manager 
  PIF Manager의 주요 목적은 N2OS에서 Ethernet Bridging, MAC Filtering & Forwarding, 802.1p/802.1Q VLAN, 802.1D Spanning Tree Control, Link Aggregation 등과 같은 전반적인 L2 스위치의 기능을 처리하고, Physical Port, L2 Switch Port, L3 Routed Port, VLAN Interface 등 다양한 네트워크 인터페이스를 관리하는 역할을 담당한다. 
   N2OS의 L2 처리 구조는 PIF Manager에서 L2 Switch Port 설정, Port Group 설정, VLAN 설정 등 인터페이스 설정에 관한 운용자의 명령을 처리 및 H/W에 반영하고, 이러한 Port 정보에 대한 Database를 유지관리 한다. 그리고 xSTP, LACP 등 L2 Protocol들은 H/W에 대한 제어를 위하여 H/W API에 직접적으로 접근하지 않고 PIF Manager를 통하여 H/W 제어에 대한 요청을 하도록 구성되어 있다. 또한, PIF Manager는 L3 IP Interface에 대한 설정 정보를 유지하고 상태를 감시하고 있으며, 상태가 변경되면 IP Interface 이벤트를 통하여 L3 Routing Protocol 및 RIB 등 Routing 소프트웨어 블록들에게 변경 정보를 전달하는 역할을 수행한다.
   N2OS 시스템은 PIF Manager를 통하여 다양한 L2 Protocol들이 H/W 시스템에 의존성 없이 독립적으로 본연의 Protocol 기능만 수행할 수 있도록 설계하였으며, L2 Switch, L3 Router 및 L2/L3 Multi-layer Switch 등 다양한 장비의 다양한 L2 Port 및 L3 IP Interface 관리를 PIF Manger가 통합적으로 유지관리하고, 필요한 정보를 이벤트로 전달하여네트워크 소프트웨어의 개발이 용이하도록 구성하였다.

  ■ RIB, LIB and MRIB Manager 
  RIB Manager는 RIP/OSPF/ISIS/BGP 등의 L3 Routing 프로토콜이 생성하는 Route 정보에 대한 관리서비스를 제공하며, Static Route를 포함한 각 Routing 프로토콜에 의해 생성 및 삭제되는 Route 정보에 대하여 Route 테이블을 유지 관리하고, 포워딩 컴포넌트가 관리하는 FIB의 제어 기능을 수행한다. 또한, Routing 프로토콜들로  Route 검색, Route 재분배, Route 통지 등의 기능을 제공한다.
  LIB Manager는 (CR-)LDP/RSVP-TE 등의 MPLS 프로토콜이 생성하는 Label 정보를 관리하며, Static Label을 포함한 각 MPLS 프로토콜에 의해 성성 및 삭제되는 Label 정보에 대하여 포워딩 컴포넌트가 관리하는 FLIB(Forwarding Label Information Base) 정보의 제어 기능을 수행한다.  또한 Ingress LER(Label Edge Router) 에서 L2 또는 L3 패킷을 LSP(Label Switched Path) 로 터널링할 수 있도록 PIF/RIB Manager와 연계하여 FEC(Forwarding Equivalence Class) 제어 기능을 수행한다.
   MRIB Manager는 PIM-SM 등의 Multicast Routing 프로토콜이 생성하는 Multicast Route 정보를 관리하며, 생성 및 삭제되는 Multicast Route 정보에 대하여 Multicast Route 테이블을 유지 및 관리하며, 포워딩 컴포넌트가 관리하는 Multicast FIB의 제어 기능을 수행한다.  또한, Multicast Routing 프로토콜에게 Route 검색, Route 통지 등의 기능을 제공하며, RIB Manager와 연계하여 Reverse Path Check 기능을 수행한다.

  ■ Policy Manager 
  네트워크 장비의 QoS 및 라우팅 정책을 담당하는 소프트웨어 블록이다. 일반적으로 QoS 관리기능은 Classification, Marking, Congestion Control 및 Congestion Avoidance 등의 기능을 하드웨어 및 시스템에 의존하여 수행하며, 소프트웨어로 구현하여 시스템 구현 시 확장이 가능한 특성이 있다. 또한 라우팅 정책 제어를 위한 기능으로 ACL(Access Control List), Prefix-List 및 PBR(Policy Based Routing) 기능을 포함한다. 
  ACL 기능은 시스템에 관리자에 의해 설정된 조건에 따라 네트워크 접근을 제어하여 네트워크 내부 데이터 흐름을 막거나 허가하는 기능을 수행하며, Prefix List는 ACL 기능이 적용 순서에 따라 설정되고 추가, 삭제가 불가능한 단점을 보완하여 융통성과 성능이 우수한 특성이 있다. 그리고 PBR 기능은 수신된 IP 패킷의 목적지 주소 이외에 다른 정보들(Source IP 주소, TCP/UDP port 번호 등)을 참조하여 패킷 포워딩하는 기술로, FBF(Filter Based Forwarding)이라고도 한다. 
  N2OS Policy Manager 기능은 각각의 기능을 독립적으로 설정하여 조립하는 형태로 정책구성이 가능한 특징을 가지고 있다.

  ■ Command Manager 
  N2OS의 동작을 제어하기 위한 사용자 또는 외부 시스템의 접근 인터페이스를 제공하며, 수신한 명령어는 해당 블록으로 전달하고, 이에 대한 응답은 운용자 또는 외부 시스템으로 전달한다. 이를 위해 Command Manager Shell (CMSH)은 명령어 입출력 처리를 위해 명령어 모드 제어, 문법 체크, 명령어 자동완성 및 명령어에 대한 도움말 기능 등을 제공한다. Command Manager (CM)는 CHSH, WebUI, SNMP, NetConfAgent 등 외부 운영관리 도구들의 명령어를 N2OS의 각 블록에 전달하며, 각 사용자 세션에 대한 사용자 인증, 초기 설정 (Startup Config)로드 및 명령어 일괄 수정(Load Override) 기능을 수행한다. 그리고  Command External Adapter (CEA)는 SNMP 및 Web 등 외부 시스템용 제어 인터페이스를 제공하며, 확장성을 고려하여 명령어와 각 블록에 대한 IPC 맵핑이 가능하다.

  ■ Process Manager 
  N2OS가 부팅되거나 재시작 되는 경우 프로세스들의 연관성에 따라 프로세스들을 순차적으로 구동하는 기능을 수행하며, 운영 중에는 프로세스들의 상태를 모니터링 하여 비정상 프로세스 상태에 대해 보고하고, 필요에 따라서 프로세스들을 재시동 또는 종료시키는 기능을 수행한다. 이러한 프로세스 관리 방식은 시스템 차원에서 프로세스들을 제어할 수 있으며, Availability Manager나 Check Point Manager와의 연동을 통해서 서비스 연속성을 보장하기 위한 High Availability 프레임워크 구성에 활용될 수 있다.  

  ■ Log Manager 
  Log Manager는 프로세스들의 동작 과정을 기록(Logging)함으로써 추후 디버깅이나 시스템 상태를 확인하기 위해서 사용된다. N2OS에서 제공하는 로그 기능은 시스템 및 프로세스 단위로 로그 정보를 수준별로 기록하며, 로그 정보의 기록은 파일과 같은 비휘발성 매체에 날짜 별로 저장할 수 있다. 또한 타 시스템으로 로그 정보를 전달하는 기능을 포함함으로써 별도의 로그 서버나 시스템 제어 서버를 운용할 수 있다. 

  ■ Event Manager 
  Event Manager는 미리 정의된 현상이 발생하는 경우, 특정 프로세스가 이 정보를 공개하고 미리 등록된 관련 프로세스들이 그 정보를 수신함으로써 발생한 현상에 대해서 관련 프로세스들이 적절하게 대처할 수 있도록 한다. 이를 위해 각 프로세스들은 특정한 이벤트가 발생하는 경우 해당 이벤트를 처리하기 위한 Callback 함수를 등록한다. 특히 N2OS에서 제공하는 이벤트 관리는 프로세스들이 I/O, Timer와 같은 다양한 이벤트를 선택적으로 수신할 수 있으며, 수신된 이벤트는 미리 정의된 우선 순위에 따라 우선 순위별 FCFS(First Come First Service) 처리가 가능하다. 

  ■ Memory Manager 
  Memory Manager는 프로세스들이 메모리 자원을 설정, 해제, 재설정하기 위한 기능을 제공하며, 메모리 사용 현황을 프로세스 및 타입 별로 관리함으로써 효율적인 메모리 관리가 가능하게 한다. 특히 디버그 모드에서는 각 프로세스별로 메모리를 할당 또는 제거하는 파일과 함수 이름, 라인 수, 그리고 메모리를 제어한 시간까지 관리함으로써 소프트웨어 개발자들이 메모리 누수(leak)를 쉽게 추적할 수 있는 방법을 제공한다.  

  ■ IPC Manager 
  IPC Manager는 N2OS 프로세스들 간에 P2P(Point to Point) 및 P2MP(Point to Multi-Point) 통신 방법을 제공하며, 전송 메시지에 대한 결과 수신 후 다음 동작을 수행하는 Sync 통신과 전송 메시지에 대한 결과의 수신 여부와 상관없이 다음 동작을 수행하는 Async 통신 방식을 지원한다. P2P 통신은 프로세스들 간에 직접 메시지를 전달하기 위해 전달 메시지와 목적지 프로세스 정보만을 이용하여 IPC 라이브러리 해당 메시지를 전달한다. P2MP 통신은 각 프로세스들이 관심있는 메시지를 초기화 단계에서 IPC Manager에 등록하면 해당 메시지를 수신한 IPC Manager가 해당 프로세스들에게 메시지를 전달한다. N2OS는 P2P, P2MP, Sync, Async 통신 방식을 모두 지원함으로써 소프트웨어 개발자들이 별도의 복잡한 IPC 메커니즘을 고려하여 프로그래밍하는 수고를 줄일 수 있다.
 */

